# This workflow is used for publishing the static GitHub pages site.
#
# Before triggering a release the `semver.txt` file should be updated in the
# relevant branch.
#
# When commiting the version change in `semver.txt` the commit message is
# important as it will be used for the release in GitHub.
#
# For an example commit browse to
# https://github.com/CycloneDX/cyclonedx-dotnet/commit/d110af854371374460430bb8438225a7d7a84274.
# 
# The resulting release is here
# https://github.com/CycloneDX/cyclonedx-dotnet/releases/tag/v1.0.0.
#
# Releases are triggered manually. This can be done by browsing to
# https://github.com/CycloneDX/cyclonedx-web-tool/actions?query=workflow%3ARelease
# and selecting "Run workflow". If releasing a patch for a previous version
# make sure the correct branch is selected. It will default to the default
# branch.
name: Release

on:
  workflow_dispatch

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2.3.4

      # Build and package everything
      - name: Package release
        id: package_release
        run: |
          VERSION=`cat semver.txt`
          echo "##[set-output name=version;]$VERSION"
          dotnet publish --configuration Release /p:Version=$VERSION --output ./gh-pages CycloneDX.WebTool/CycloneDX.WebTool.csproj
          cd gh-pages/wwwroot
          zip -r ../../CycloneDX.WebTools.zip ./
          tar -zcvf ../../CycloneDX.WebTools.tar.gz ./
          cd ../..

      - name: Create github release and git tag for release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.package_release.outputs.version }}
          tag_name: v${{ steps.package_release.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload zip package to github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CycloneDX.WebTools.zip
          asset_name: CycloneDX.WebTools.${{ steps.package_release.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Upload tar.gz package to github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CycloneDX.WebTools.tar.gz
          asset_name: CycloneDX.WebTools.${{ steps.package_release.outputs.version }}.tar.gz
          asset_content_type: application/gzip
